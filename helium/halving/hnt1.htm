<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Helium (HNT) Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
:root {
    --primary-color: #29abe2;
    --primary-hover: #4fbce8;
    --secondary-color: #1a3e72;
    --text-color: #333;
    --text-inverse: #f0f0f0;
    --background-color: #f5f7fa;
    --card-bg: #fff;
    --card-bg-dark: #1e293b;
    --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    --shadow-hover: 0 8px 15px rgba(0, 0, 0, 0.2);
    --transition: all 0.3s ease;
}

.dark-mode {
    --text-color: #f0f0f0;
    --background-color: #0f172a;
    --card-bg: #1e293b;
    --shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: var(--background-color);
    color: var(--text-color);
    margin: 0;
    padding: 0;
    line-height: 1.6;
    transition: var(--transition);
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
}

header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
    padding-bottom: 15px;
    border-bottom: 2px solid var(--primary-color);
}

h1, h2, h3 {
    color: var(--primary-color);
    margin-top: 0;
}

.controls {
    display: flex;
    gap: 10px;
    align-items: center;
}

.btn {
    background-color: var(--primary-color);
    color: white;
    border: none;
    padding: 8px 15px;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    transition: var(--transition);
    display: flex;
    align-items: center;
    gap: 5px;
}

.btn:hover {
    background-color: var(--primary-hover);
    transform: translateY(-2px);
    box-shadow: var(--shadow-hover);
}

.btn-outline {
    background-color: transparent;
    border: 2px solid var(--primary-color);
    color: var(--primary-color);
}

.btn-outline:hover {
    background-color: var(--primary-color);
    color: white;
}

.chart-section, .halving-section {
    background-color: var(--card-bg);
    border-radius: 10px;
    padding: 20px;
    margin-bottom: 30px;
    box-shadow: var(--shadow);
    transition: var(--transition);
}

.chart-section:hover, .halving-section:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-hover);
}

.chart-container {
    height: 500px;
    width: 100%;
    border-radius: 20px;
    overflow: hidden;
    margin-bottom: 20px;
    background: var(--card-bg);
    position: relative;
    border: 1px solid rgba(41, 171, 226, 0.2);
    box-shadow: var(--shadow);
    padding: 20px;
    box-sizing: border-box;
}

.chart-container::before {
    content: '';
    position: absolute;
    top: -10px;
    left: -10px;
    right: -10px;
    bottom: -10px;
    background: inherit;
    z-index: -1;
    filter: blur(10px);
    opacity: 0.7;
}

.chart-canvas-container {
    height: 100%;
    width: 100%;
    position: relative;
}

.chart-loading {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    color: var(--primary-color);
    font-size: 1.2rem;
}

.chart-controls {
    display: flex;
    gap: 10px;
    margin-bottom: 15px;
    flex-wrap: wrap;
}

.chart-controls button {
    padding: 8px 12px;
    border: 1px solid var(--primary-color);
    background: transparent;
    color: var(--primary-color);
    border-radius: 5px;
    cursor: pointer;
    transition: var(--transition);
    font-size: 0.9rem;
}

.chart-controls button:hover,
.chart-controls button.active {
    background: var(--primary-color);
    color: white;
}

.chart-info {
    font-size: 0.8rem;
    text-align: right;
    color: var(--text-color);
    opacity: 0.7;
    margin-top: 10px;
}

.halving-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    margin-bottom: 20px;
}

.halving-stats {
    background-color: rgba(41, 171, 226, 0.1);
    padding: 20px;
    border-radius: 8px;
    transition: var(--transition);
    border-left: 4px solid var(--primary-color);
}

.halving-stats:hover {
    transform: translateY(-3px);
    box-shadow: var(--shadow-hover);
}

.stat {
    margin-bottom: 15px;
    display: flex;
    justify-content: space-between;
    padding: 8px 0;
    border-bottom: 1px dashed rgba(41, 171, 226, 0.3);
    transition: var(--transition);
}

.stat:hover {
    background-color: rgba(41, 171, 226, 0.05);
    padding-left: 5px;
}

.stat .value {
    font-weight: bold;
    color: var(--primary-color);
}

.history-container {
    display: flex;
    gap: 20px;
    margin-top: 20px;
}

.history-panel {
    flex: 1;
    background-color: rgba(26, 62, 114, 0.1);
    padding: 20px;
    border-radius: 8px;
    border-left: 4px solid var(--secondary-color);
    transition: var(--transition);
}

.history-panel:hover {
    transform: translateY(-3px);
    box-shadow: var(--shadow-hover);
}

ul {
    padding-left: 20px;
}

li {
    margin-bottom: 8px;
    padding: 5px 0;
    transition: var(--transition);
}

li:hover {
    color: var(--primary-color);
    padding-left: 5px;
}

.theme-toggle {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: var(--text-color);
    transition: var(--transition);
}

.theme-toggle:hover {
    color: var(--primary-color);
    transform: rotate(30deg);
}

.tooltip {
    position: relative;
    display: inline-block;
}

.tooltip .tooltiptext {
    visibility: hidden;
    width: 200px;
    background-color: var(--card-bg-dark);
    color: var(--text-inverse);
    text-align: center;
    border-radius: 6px;
    padding: 5px;
    position: absolute;
    z-index: 1;
    bottom: 125%;
    left: 50%;
    transform: translateX(-50%);
    opacity: 0;
    transition: opacity 0.3s;
    box-shadow: var(--shadow);
    font-size: 0.9rem;
}

.tooltip:hover .tooltiptext {
    visibility: visible;
    opacity: 1;
}

.price-loading {
    color: var(--primary-color);
    animation: pulse 1.5s infinite;
}

@keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
}

@media (max-width: 768px) {
    .tradingview-widget-container {
        height: 300px;
    }
    
    .halving-container {
        grid-template-columns: 1fr;
    }
    
    header {
        flex-direction: column;
        align-items: flex-start;
        gap: 15px;
    }
    
    .history-container {
        flex-direction: column;
    }
}
    </style>
</head>
<body>
    <div class="container">
        <header>
            <div class="header-left">
                <h1 data-translate="title">Helium (HNT) Dashboard</h1>
                <div class="tooltip">
                    <small data-translate="last-updated">Last updated: <span id="last-updated">Loading...</span></small>
                    <span class="tooltiptext" data-translate="update-tooltip">Data refreshed on page load</span>
                </div>
            </div>
            <div class="controls">
                <button id="theme-toggle" class="theme-toggle" title="Toggle dark mode">
                    <i class="fas fa-moon"></i>
                </button>
                <button id="language-toggle" class="btn btn-outline">
                    <i class="fas fa-language"></i>
                    <span>PL</span>
                </button>
                <button id="sound-toggle" class="btn btn-outline">
                    <i class="fas fa-volume-up"></i>
                </button>
            </div>
        </header>

        <section class="chart-section">
            <h2 data-translate="price-chart">HNT Price Chart</h2>
            <div class="chart-container">
                <div class="chart-controls">
                    <button class="time-range active" data-days="7">7D</button>
                    <button class="time-range" data-days="30">30D</button>
                    <button class="time-range" data-days="90">3M</button>
                    <button class="time-range" data-days="180">6M</button>
                    <button class="time-range" data-days="365">1Y</button>
                    <button class="time-range" data-days="max">ALL</button>
                </div>
                <div class="chart-canvas-container">
                    <div class="chart-loading" id="chart-loading">
                        <i class="fas fa-spinner fa-spin"></i><br>
                        Loading chart data...
                    </div>
                    <canvas id="hnt-chart"></canvas>
                </div>
                <div class="chart-info">
                    Data provided by CoinGecko API | Real-time HNT price data
                </div>
            </div>
        </section>

        <section class="halving-section">
            <h2 data-translate="halving-info">Halving Information</h2>
            <div class="halving-container">
                <div class="halving-stats">
                    <div class="stat">
                        <span data-translate="current-stage">Current emission stage:</span>
                        <span class="value">Post-2025 (625k HNT/month)</span>
                    </div>
                    <div class="stat">
                        <span data-translate="last-halving">Last halving:</span>
                        <span class="value" id="last-halving-date">2025-08-01</span>
                        <span class="value" id="time-since-halving">6d 00h 00m 00s</span>
                    </div>
                    <div class="stat">
                        <span data-translate="next-halving">Next halving:</span>
                        <span class="value" id="next-halving-date">2027-08-01</span>
                        <span class="value" id="time-to-halving">723d 23h 59m 59s</span>
                    </div>
                    <div class="stat">
                        <span data-translate="current-price">Current price:</span>
                        <span class="value price-loading" id="current-price">Loading...</span>
                    </div>
                </div>

                <div class="halving-stats">
                    <div class="stat">
                        <span data-translate="market-cap">Market cap:</span>
                        <span class="value price-loading" id="market-cap">Loading...</span>
                    </div>
                    <div class="stat">
                        <span data-translate="circulating">Circulating supply:</span>
                        <span class="value" id="circulating-supply">186,011,619 HNT</span>
                    </div>
                    <div class="stat">
                        <span data-translate="max-supply">Max supply:</span>
                        <span class="value">223,000,000 HNT</span>
                    </div>
                    <div class="stat">
                        <span data-translate="consensus">Consensus:</span>
                        <span class="value">PoC – HoneyBadger BFT</span>
                    </div>
                </div>
            </div>

            <div class="history-container">
                <div class="history-panel">
                    <h3 data-translate="halving-history">Halving History</h3>
                    <ul>
                        <li>2019: 60M HNT</li>
                        <li>2021-08-01: 60M HNT</li>
                        <li>2023-08-01: 30M HNT</li>
                        <li>2025-08-01: 15M HNT</li>
                        <li>2027-08-01: 7.5M HNT</li>
                    </ul>
                </div>

                <div class="history-panel">
                    <h3 data-translate="reward-history">Block Reward History</h3>
                    <ul>
                        <li>Pre-2021: 5M HNT/month</li>
                        <li>Post-2021: 2.5M HNT/month</li>
                        <li>Post-2023: 1.25M HNT/month</li>
                        <li>Post-2025: 625k HNT/month (current)</li>
                    </ul>
                </div>
            </div>
        </section>
    </div>

    <audio id="bg-music" loop>
        <source src="bg.mp3" type="audio/mpeg">
    </audio>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/locale/pl.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <script>
// Translation dictionary
const translations = {
    "title": {
        "en": "Helium (HNT) Dashboard",
        "pl": "Panel Helium (HNT)"
    },
    "price-chart": {
        "en": "HNT Price Chart",
        "pl": "Wykres ceny HNT"
    },
    "halving-info": {
        "en": "Halving Information",
        "pl": "Informacje o halvingu"
    },
    "current-stage": {
        "en": "Current emission stage:",
        "pl": "Aktualny etap emisji:"
    },
    "last-halving": {
        "en": "Last halving:",
        "pl": "Ostatni halving:"
    },
    "next-halving": {
        "en": "Next halving:",
        "pl": "Następny halving:"
    },
    "current-price": {
        "en": "Current price:",
        "pl": "Aktualna cena:"
    },
    "market-cap": {
        "en": "Market cap:",
        "pl": "Kapitalizacja:"
    },
    "circulating": {
        "en": "Circulating supply:",
        "pl": "Podaż w obiegu:"
    },
    "max-supply": {
        "en": "Max supply:",
        "pl": "Maksymalna podaż:"
    },
    "consensus": {
        "en": "Consensus:",
        "pl": "Konsensus:"
    },
    "halving-history": {
        "en": "Halving History",
        "pl": "Historia halvingów"
    },
    "reward-history": {
        "en": "Block Reward History",
        "pl": "Historia nagród blokowych"
    },
    "last-updated": {
        "en": "Last updated:",
        "pl": "Ostatnia aktualizacja:"
    },
    "update-tooltip": {
        "en": "Data refreshed on page load",
        "pl": "Dane odświeżane przy wczytaniu strony"
    }
};

// Current settings - using memory instead of localStorage
let currentLanguage = 'en';
let currentTheme = 'light';
let hntChart = null;
let currentTimeRange = '7';
const pageLoadTime = new Date();

// DOM elements
const themeToggle = document.getElementById('theme-toggle');
const languageToggle = document.getElementById('language-toggle');
const soundToggle = document.getElementById('sound-toggle');
const bgMusic = document.getElementById('bg-music');
const lastUpdatedEl = document.getElementById('last-updated');

// Initialize dashboard
function initDashboard() {
    loadSettings();
    setupEventListeners();
    loadHNTChart();
    fetchHNTPrice();
    startCountdowns();
}

async function loadHNTChart(days = 7) {
    const chartLoading = document.getElementById('chart-loading');
    const canvas = document.getElementById('hnt-chart');
    
    try {
        chartLoading.style.display = 'block';
        canvas.style.display = 'none';
        
        // Fetch historical data from CoinGecko
        const daysParam = days === 'max' ? 'max' : days;
        const response = await fetch(`https://api.coingecko.com/api/v3/coins/helium/market_chart?vs_currency=usd&days=${daysParam}&interval=${days <= 7 ? 'hourly' : 'daily'}`);
        const data = await response.json();
        
        if (!data.prices || data.prices.length === 0) {
            throw new Error('No price data available');
        }
        
        // Prepare chart data
        const chartData = {
            labels: data.prices.map(price => moment(price[0]).format(days <= 7 ? 'MMM DD HH:mm' : 'MMM DD YYYY')),
            datasets: [{
                label: 'HNT Price (USD)',
                data: data.prices.map(price => price[1]),
                borderColor: currentTheme === 'dark' ? '#4fbce8' : '#29abe2',
                backgroundColor: currentTheme === 'dark' ? 'rgba(79, 188, 232, 0.1)' : 'rgba(41, 171, 226, 0.1)',
                borderWidth: 2,
                fill: true,
                tension: 0.1,
                pointRadius: 0,
                pointHoverRadius: 6,
                pointHoverBackgroundColor: '#29abe2',
                pointHoverBorderColor: '#ffffff',
                pointHoverBorderWidth: 2
            }]
        };
        
        // Chart configuration
        const config = {
            type: 'line',
            data: chartData,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: true,
                        position: 'top',
                        labels: {
                            color: currentTheme === 'dark' ? '#f0f0f0' : '#333',
                            font: {
                                family: 'Segoe UI',
                                size: 12
                            }
                        }
                    },
                    tooltip: {
                        mode: 'index',
                        intersect: false,
                        backgroundColor: currentTheme === 'dark' ? 'rgba(30, 41, 59, 0.9)' : 'rgba(255, 255, 255, 0.9)',
                        titleColor: currentTheme === 'dark' ? '#f0f0f0' : '#333',
                        bodyColor: currentTheme === 'dark' ? '#f0f0f0' : '#333',
                        borderColor: '#29abe2',
                        borderWidth: 1,
                        cornerRadius: 8,
                        displayColors: false,
                        callbacks: {
                            label: function(context) {
                                return `Price: $${context.parsed.y.toFixed(4)}`;
                            },
                            title: function(context) {
                                return moment(data.prices[context[0].dataIndex][0]).format('MMM DD, YYYY HH:mm');
                            }
                        }
                    }
                },
                interaction: {
                    mode: 'nearest',
                    axis: 'x',
                    intersect: false
                },
                scales: {
                    x: {
                        display: true,
                        grid: {
                            color: currentTheme === 'dark' ? 'rgba(240, 240, 240, 0.1)' : 'rgba(51, 51, 51, 0.1)',
                            borderColor: currentTheme === 'dark' ? 'rgba(240, 240, 240, 0.2)' : 'rgba(51, 51, 51, 0.2)'
                        },
                        ticks: {
                            color: currentTheme === 'dark' ? '#f0f0f0' : '#333',
                            font: {
                                family: 'Segoe UI',
                                size: 10
                            },
                            maxTicksLimit: 8
                        }
                    },
                    y: {
                        display: true,
                        grid: {
                            color: currentTheme === 'dark' ? 'rgba(240, 240, 240, 0.1)' : 'rgba(51, 51, 51, 0.1)',
                            borderColor: currentTheme === 'dark' ? 'rgba(240, 240, 240, 0.2)' : 'rgba(51, 51, 51, 0.2)'
                        },
                        ticks: {
                            color: currentTheme === 'dark' ? '#f0f0f0' : '#333',
                            font: {
                                family: 'Segoe UI',
                                size: 10
                            },
                            callback: function(value) {
                                return '$' + value.toFixed(2);
                            }
                        },
                        beginAtZero: false
                    }
                },
                animation: {
                    duration: 1000,
                    easing: 'easeInOutQuart'
                }
            }
        };
        
        // Dest